@model PagedList.IPagedList<Amil.AsmWebCad.UI.Models.PainelConfiguracaoViewModel>

@if (Model != null)
{
    <table class="table table-striped table-hover" id="PainelGrid">
        <thead>
            <tr>
                <th>Código</th>
                <th>Unidade Atendimento</th>
                <th>Local na Unidade</th>
                <th>Ordenação</th>
                <th>Refresh (Min.)</th>
                <th>Status</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr data-idConvenio="@item.Id">
                        <td>@item.Id</td>
                        <td>@item.DescUnidade</td>
                        <td>@item.Local</td>
                        <td>@item.DescOrdenacao</td>
                        <td>@item.TempoRefresh</td>
                        <td>@(item.isAtivo ? "Ativo" : "Inativo")</td>
                        <td>
                            <a href="@Url.Action("Edit", new { id = item.Id  })" class="glyphicon glyphicon-pencil"></a>
                            <a href="@Url.Action("Detail", new { id = item.Id })" class="glyphicon glyphicon-search"></a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3">Nenhum registro foi encontrado.</td>
                </tr>
            }
        </tbody>
    </table>
    
        <div class="clearfix">
        <div class="pull-right">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            de @Model.PageCount
     
            @if (Model.HasPreviousPage)
            {
                @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
                @Html.Raw(" ");
                @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
            }
            else
            {
                @:<<
                @Html.Raw(" ");
                @:< Anterior
            }
     
            @if (Model.HasNextPage)
            {
                @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
                @Html.Raw(" ");
                @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
            }
            else
            {
                @:Próxima >
                @Html.Raw(" ")
                @:>>
            }
        </div>
    </div>
}


