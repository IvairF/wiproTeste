@model Amil.AppHospitais.DTO.Convenio

@{
    ViewBag.Title = "HOME >> Aplicativo Hospitais >> Convênio";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool EhEdicao = false;
    if (Model == null)
    {
        EhEdicao = false;
    }
    else
    {
        EhEdicao = true;
    }
}
<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Convenio", FormMethod.Post, new { id = "convenioForm" }))
        {

            @Html.HiddenFor(x => x.Id, new { @class = "", id = "" })
            <div class="form-group">
                <label for="Nome">Nome do Convênio</label>
                @Html.TextBoxFor(x => x.Nome, new { @class = "form-control", id = "Nome", @maxlength = 70, placeholder = "Nome do Convênio", required = "" })


            </div>


            <div class="form-group">
                <label for="NomeAbreviado">Nome Abreviado do Convênio</label>
                @Html.TextBoxFor(x => x.NomeAbreviado, new { @class = "form-control", id = "NomeAbreviado", @maxlength = 20, placeholder = "Nome Abreviado", required = "" })


            </div>
            <div class="form-group">
                <label for="RegistroANS">Registro ANS</label>
                @Html.TextBoxFor(x => x.RegistroANS, new { @class = "form-control", id = "RegistroANS", placeholder = "" })
            </div>
            <div class="form-group">
                <label for="CodCorporativo">Código Corporativo do Convênio</label>
                @Html.TextBoxFor(x => x.CodCorporativo, new { @class = "form-control", id = "CodCorporativo", placeholder = "" })
            </div>
            <div class="form-group">
                <label for="TipoConvenio">Tipo de Convênio</label>
                @Html.DropDownList("TipoConvenio", ViewBag.TiposConvenio as List<SelectListItem>, new { @class = " form-control ", id = "TipoConvenio" })
            </div>
            <div class="col-xs-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(x => x.isElegibilidade, new { @class = "form-check-input", id = "Elegivel" })
                        Elegível
                    </label>
                </div>
                <div class="checkbox">
                    <label>
                        @if (EhEdicao){
                        @Html.CheckBoxFor(x => x.isAtivo, new { @class = "form-check-input", id = "Ativo" })
                        }
                        else{
                        @Html.CheckBoxFor(x => x.isAtivo, new { @class = "form-check-input", id = "Ativo", @checked = "checked", disabled = "disabled" })
                        }
                        Ativo
                    </label>
                </div>
            </div>

            <div class="col-md-12">
                <div class="col-md-4">
                    <input type="submit" value="Confirmar" class="btn btn-success" onclick="Salvar(); return false;" />
                    <input type="button" value="Cancelar" class="btn btn-danger" onclick="javascript: window.history.go(-1)" />
                </div>
            </div>
        }
    </div>
</div>
<link href="~/Content/toastr.min.css" rel="stylesheet" />
<script src="~/Scripts/toastr/toastr.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#RegistroANS").mask('999999');
        $("#CodCorporativo").mask('9999999');
    });
    function Salvar() {

        $.ajax({
            url: "@Url.Action("Edit")",
            type: 'POST',
            data: $('form#convenioForm').serialize(),
            success: function (result) {
                if (result == "True")

                    Mensagem("Sucesso:", "Convênio salvo com sucesso!.", "success");
                else

                    var warningMessages = '';
                $.each($("[required]:not([type=checkbox])"), function () {
                    if (!$(this).val()) {
                        valido = false;
                        $(this).addClass("red-border");
                        warningMessages += "- " + $(this).parent().children('label').text() + "<br>";
                    }
                    else {
                        $(this).removeClass("red-border");
                    }
                });

                if (warningMessages.length > 0) {
                    Mensagem("Aviso:", "Favor, verificar todos os campos obrigatórios:" + "<br><br>" + warningMessages, "warning");
                }
            },
            erro: function () {
                Mensagem("Erro:", "Ocorreu um erro ao tentar salvar o convênio!", "error");
            }
        });
        return false;
    }
    function Mensagem(titulo, texto, tipo) {
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-bottom-full-width",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr[tipo](texto, titulo)
    }
</script>
