@using Amil.AsmWebCad.UI.Resources;
@model Amil.AsmWebCad.UI.Models.CadastraLoginModel

@{
    ViewBag.Title = @Resource.CadastraLogin_Titulo;
    Layout = "~/Views/Shared/_LayoutSemMenu.cshtml";
}
<script>
    if ('@ViewBag.MyErrorMessage' == 'Erro') {
        $(document).ready(function() {
            $('#ExisteUsuarioModal').modal();
        });
    }
    if ('@ViewBag.Sucesso' == 'True') {
        var buttons = [{
            text: "Fechar",
            cssClass: 'btn btn-primary btn-outline',
            click: function () {
                AmilFramework.Common.OpenAjaxURL("\Login");
            }
        }];
        AmilFramework.Alert.Create(3, "Login criado com sucesso! Foi enviado ao seu email informações sobre o acesso ao sistema.", 400, buttons, "Aviso");
    }


</script>

<div class="panel-heading">
    @Html.Label(Resource.CadastreSe)
</div>
<div class="panel-body">
    <div class="body-content">
        <div class="login" style="position: static;">
            @using (Html.BeginForm("CadastraLogin", "Login", new { ReturnUrl = Request.QueryString["ReturnUrl"] }))//, token = @ViewBag.Token
            {
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.NomeCompleto)
                    </div>
                    <div class="value-text">
                        @Html.TextBoxFor(x => x.Nome, new {@class = "form-control", style="text-transform:uppercase"})
                    </div>
                </div>
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.Email)
                    </div>
                    <div class="value-text">
                        @Html.TextBoxFor(x => x.Email, new {@class = "form-control"})
                    </div>
                </div>
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.RepeticaoEmail)
                    </div>
                    <div class="value-text">
                        @Html.TextBoxFor(x => x.ConfirmaEmail, new {@class = "form-control"})
                    </div>
                </div>
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.TipoConselho)
                    </div>
                    @Html.DropDownListFor(x => x.TipoConselho, (SelectList)ViewBag.TipoConselho, @Resource.Selecione, new { @class = "form-control" })
                </div>
                <div class="col-lg-6 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.NumeroNoConselho)
                    </div>
                    <div class="value-text">
                        @Html.TextBoxFor(x => x.Conselho, new {@class = "form-control", maxlength="15"})
                    </div>
                </div>
                <div class="col-lg-6 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.UF)
                    </div>
                    @Html.DropDownListFor(x => x.UF, (SelectList)ViewBag.UF, @Resource.Selecione, new { @class = "form-control" })
                </div>
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.CPF)
                    </div>
                    <div class="value-text">
                        @Html.TextBoxFor(x => x.CPF, new {@class = "form-control", dataMask = "999.999.999-99"})
                    </div>
                </div>
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.CriarSenha)
                    </div>
                    <div class="value-text">
                        @Html.PasswordFor(x => x.Senha, new {@class = "form-control"})
                    </div>
                </div>
                <div class="col-lg-12 height-70">
                    <div class="label-text">
                        @Html.Label(Resource.RepeticaoSenha)
                    </div>
                    <div class="value-text">
                        @Html.PasswordFor(x => x.ConfirmaSenha, new {@class = "form-control"})
                    </div>
                </div>
                <div class="col-lg-12">
                    <p style="height: 35px;">
                        <input type="submit" value="@Resource.CadastreSe" class="btn btn-primary"  style="margin-right: 120px; width:120px;" />
                        <input type="button" value="@Resource.Voltar" class="btn btn-outline btn-primary"  style="margin-right: 5px; width:90px;" onclick="location.href='@Url.Action("Login", "Login")    '" />
                    </p>
                </div>
                <p>
                    @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
                    { 
                        <div class="alert alert-danger">
                            @*<button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>*@
                            @Html.ValidationSummary(true)
                        </div>
                    }
                </p>
            }
        </div>
    </div>
</div>
@Html.Partial("_ModalUsuarioExistente")
